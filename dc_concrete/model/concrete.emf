@namespace(uri="http://concretemodel", prefix="concretemodel")
@gmf
package concretemodel;

class ModelFactoryConcrete {
	val ProjectAdj [*] listProjects;
}

class ProjectAdj {
	attr String name;
	attr String path;
	val ClassDiagramAdj [*] lstClassDiagramAdj;
	val AttributeTypeConcreteAdj [*] lstAttributeTypeConcreteAdj;
}


@gmf.diagram
class ClassDiagramAdj {
	attr String name;
	val PackageConcreteAdj [*] lstPackageConcreteAdj;
	val RelationshipAdj [*] lstRelationship;
	val ClassConcreteAdj [*] lstClassConcreteAdj;
}



@gmf.node(label="name")
class PackageConcreteAdj{
	attr String path;
	attr String name;
}


abstract class RelationshipAdj{
	attr String roleTarget;
	attr String roleSource;
	attr String multiplicityTargetClass;
	attr String multiplicitySourceClass;
	ref ClassConcreteAdj classSource;
	ref ClassConcreteAdj classTarget;	
}

@gmf.link(source="classSource", target="classTarget", source.decoration="none", target.decoration = "filledrhomb", style="solid", width="2", color="0,0,0", target.decorationSize="16") // negro
class ContainmentSdj extends RelationshipAdj { 
}

@gmf.link(source="classSource", target="classTarget", source.decoration="none", target.decoration = "rhomb", style="solid", width="2", color="0,0,0", target.decorationSize="16") // negro
class SharingAdj extends RelationshipAdj { 
}

@gmf.link(source="classSource", target="classTarget", source.decoration="none", target.decoration = "none", style="solid", width="2", color="0,0,0") // negro
class AssociationAdj extends RelationshipAdj { 
}

@gmf.link(source="classSource", target="classTarget", source.decoration="none", target.decoration = "arrow", style="solid", width="2", color="0,0,0", target.decorationSize="16") // negro
class GeneralizationAdj extends RelationshipAdj { 
}




@gmf.node(label="name", color="255,255,128")
class ClassConcreteAdj{
	attr String name;
	attr String path;
	attr AccessModifierClass accesModifierClass;
	attr TypeClass tipeClass;
	@gmf.compartment(layout="list",collapsible="true")
	val AttributeConcreteAdj [*] lstAttributeConcreteAdj;
	@gmf.compartment(layout="list",collapsible="true")
	val MethodConcreteAdj [*] lstMethodConcreteAdj;
}

@gmf.node(label="methodName", color="255,255,128")
class MethodConcreteAdj{
	attr String methodName;
	attr String body;
	attr String returnType;
	attr AccessModifier accessModifier;
	val ParameterConcreteAdj [*] lstParameterConcreteAdj;
}

class ParameterConcreteAdj{
	attr String name;
	ref AttributeTypeConcreteAdj AttributeTypeConcreteAdj; 
	
}

class AttributeTypeConcreteAdj{
	attr String name;
	val ParameterConcreteAdj [*] ParameterConcreteAdj; 
	val AttributeConcreteAdj [*] lstAttributeConcreteAdj;
	 
}

@gmf.node(label="name", color="255,255,128")
class AttributeConcreteAdj{
	attr String name;
	attr String value;
	attr AccessModifier accessModifier;
	ref AttributeTypeConcreteAdj attributeTypeConcreteAdj;
}


enum AccessModifier {	
	public=1;
	private=2;
	protected=3;
	static=4;
	internal=5;
	protected_internal=6;
}

enum AccessModifierClass {	
	public=1;
	internal=2;
	protected=3;
	protected_internal=4;
	private=5;
}

enum TypeClass {	
	regular=1;
	abstrac=2;
	sealed=3;
	static=4;
	generic=5;
	
}

