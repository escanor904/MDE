/*
 * 
 */
package concretemodel.diagram.providers;

/**
 * @generated
 */
public class ConcretemodelElementTypes {

		/**
 * @generated
 */
private ConcretemodelElementTypes() {
}
	
		/**
 * @generated
 */
private static java.util.Map<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement> elements;

	/**
 * @generated
 */
private static org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages elementTypeImages = new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages(	concretemodel.diagram.part.ConcretemodelDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());

	/**
 * @generated
 */
private static java.util.Set<org.eclipse.gmf.runtime.emf.type.core.IElementType> KNOWN_ELEMENT_TYPES;
	
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType ClassDiagramAdj_1000 = getElementType("dc_concrete.diagram.ClassDiagramAdj_1000");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType PackageConcreteAdj_2001 = getElementType("dc_concrete.diagram.PackageConcreteAdj_2001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType ClassConcreteAdj_2002 = getElementType("dc_concrete.diagram.ClassConcreteAdj_2002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType AttributeConcreteAdj_3001 = getElementType("dc_concrete.diagram.AttributeConcreteAdj_3001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType MethodConcreteAdj_3002 = getElementType("dc_concrete.diagram.MethodConcreteAdj_3002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType ContainmentSdj_4001 = getElementType("dc_concrete.diagram.ContainmentSdj_4001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType ContainmentSdj_4002 = getElementType("dc_concrete.diagram.ContainmentSdj_4002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType SharingAdj_4003 = getElementType("dc_concrete.diagram.SharingAdj_4003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType SharingAdj_4004 = getElementType("dc_concrete.diagram.SharingAdj_4004");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType AssociationAdj_4005 = getElementType("dc_concrete.diagram.AssociationAdj_4005");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType AssociationAdj_4006 = getElementType("dc_concrete.diagram.AssociationAdj_4006");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType GeneralizationAdj_4007 = getElementType("dc_concrete.diagram.GeneralizationAdj_4007");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType GeneralizationAdj_4008 = getElementType("dc_concrete.diagram.GeneralizationAdj_4008");  //$NON-NLS-1$
		
		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImageDescriptor(element);
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImage(element);
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.core.runtime.IAdaptable hint) {
	return getImageDescriptor(getElement(hint));
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.core.runtime.IAdaptable hint) {
	return getImage(getElement(hint));
}

		/**
 * Returns 'type' of the ecore object associated with the hint.
 * 
 * @generated
 */
public static org.eclipse.emf.ecore.ENamedElement getElement(org.eclipse.core.runtime.IAdaptable hint) {
	Object type = hint.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
	if (elements == null) {
		elements = new java.util.IdentityHashMap<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement>();
		
	elements.put(ClassDiagramAdj_1000, concretemodel.ConcretemodelPackage.eINSTANCE.getClassDiagramAdj());
					
	
	elements.put(PackageConcreteAdj_2001, concretemodel.ConcretemodelPackage.eINSTANCE.getPackageConcreteAdj());
					
	
	elements.put(ClassConcreteAdj_2002, concretemodel.ConcretemodelPackage.eINSTANCE.getClassConcreteAdj());
					
	
	elements.put(AttributeConcreteAdj_3001, concretemodel.ConcretemodelPackage.eINSTANCE.getAttributeConcreteAdj());
					
	
	elements.put(MethodConcreteAdj_3002, concretemodel.ConcretemodelPackage.eINSTANCE.getMethodConcreteAdj());
							
	
	elements.put(ContainmentSdj_4001, concretemodel.ConcretemodelPackage.eINSTANCE.getContainmentSdj());
					
	
	elements.put(ContainmentSdj_4002, concretemodel.ConcretemodelPackage.eINSTANCE.getContainmentSdj());
					
	
	elements.put(SharingAdj_4003, concretemodel.ConcretemodelPackage.eINSTANCE.getSharingAdj());
					
	
	elements.put(SharingAdj_4004, concretemodel.ConcretemodelPackage.eINSTANCE.getSharingAdj());
					
	
	elements.put(AssociationAdj_4005, concretemodel.ConcretemodelPackage.eINSTANCE.getAssociationAdj());
					
	
	elements.put(AssociationAdj_4006, concretemodel.ConcretemodelPackage.eINSTANCE.getAssociationAdj());
					
	
	elements.put(GeneralizationAdj_4007, concretemodel.ConcretemodelPackage.eINSTANCE.getGeneralizationAdj());
					
	
	elements.put(GeneralizationAdj_4008, concretemodel.ConcretemodelPackage.eINSTANCE.getGeneralizationAdj());
			}
	return (org.eclipse.emf.ecore.ENamedElement) elements.get(type);
}

		/**
 * @generated
 */
private static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(String id) {
	return org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getType(id);
}

		/**
 * @generated
 */
public static boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	if (KNOWN_ELEMENT_TYPES == null) {
		KNOWN_ELEMENT_TYPES = new java.util.HashSet<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
			KNOWN_ELEMENT_TYPES.add(ClassDiagramAdj_1000);
		KNOWN_ELEMENT_TYPES.add(PackageConcreteAdj_2001);
		KNOWN_ELEMENT_TYPES.add(ClassConcreteAdj_2002);
		KNOWN_ELEMENT_TYPES.add(AttributeConcreteAdj_3001);
		KNOWN_ELEMENT_TYPES.add(MethodConcreteAdj_3002);
		KNOWN_ELEMENT_TYPES.add(ContainmentSdj_4001);
		KNOWN_ELEMENT_TYPES.add(ContainmentSdj_4002);
		KNOWN_ELEMENT_TYPES.add(SharingAdj_4003);
		KNOWN_ELEMENT_TYPES.add(SharingAdj_4004);
		KNOWN_ELEMENT_TYPES.add(AssociationAdj_4005);
		KNOWN_ELEMENT_TYPES.add(AssociationAdj_4006);
		KNOWN_ELEMENT_TYPES.add(GeneralizationAdj_4007);
		KNOWN_ELEMENT_TYPES.add(GeneralizationAdj_4008);
		}
	return KNOWN_ELEMENT_TYPES.contains(elementType);
}
	
		/**
 * @generated
 */
	public static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(int visualID) {
		switch (visualID) {
				case concretemodel.diagram.edit.parts.ClassDiagramAdjEditPart.VISUAL_ID:		return ClassDiagramAdj_1000;
	case concretemodel.diagram.edit.parts.PackageConcreteAdjEditPart.VISUAL_ID:		return PackageConcreteAdj_2001;
	case concretemodel.diagram.edit.parts.ClassConcreteAdjEditPart.VISUAL_ID:		return ClassConcreteAdj_2002;
	case concretemodel.diagram.edit.parts.AttributeConcreteAdjEditPart.VISUAL_ID:		return AttributeConcreteAdj_3001;
	case concretemodel.diagram.edit.parts.MethodConcreteAdjEditPart.VISUAL_ID:		return MethodConcreteAdj_3002;
	case concretemodel.diagram.edit.parts.ContainmentSdjEditPart.VISUAL_ID:		return ContainmentSdj_4001;
	case concretemodel.diagram.edit.parts.ContainmentSdj2EditPart.VISUAL_ID:		return ContainmentSdj_4002;
	case concretemodel.diagram.edit.parts.SharingAdjEditPart.VISUAL_ID:		return SharingAdj_4003;
	case concretemodel.diagram.edit.parts.SharingAdj2EditPart.VISUAL_ID:		return SharingAdj_4004;
	case concretemodel.diagram.edit.parts.AssociationAdjEditPart.VISUAL_ID:		return AssociationAdj_4005;
	case concretemodel.diagram.edit.parts.AssociationAdj2EditPart.VISUAL_ID:		return AssociationAdj_4006;
	case concretemodel.diagram.edit.parts.GeneralizationAdjEditPart.VISUAL_ID:		return GeneralizationAdj_4007;
	case concretemodel.diagram.edit.parts.GeneralizationAdj2EditPart.VISUAL_ID:		return GeneralizationAdj_4008;
		}
		return null;
	}
	
		/**
 * @generated
 */
	public static final org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes TYPED_INSTANCE 
		= new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes(elementTypeImages) {
		
		/**
 * @generated
 */
		@Override

		public boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
			return concretemodel.diagram.providers.ConcretemodelElementTypes.isKnownElementType(elementType);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.gmf.runtime.emf.type.core.IElementType getElementTypeForVisualId(int visualID) {
			return concretemodel.diagram.providers.ConcretemodelElementTypes.getElementType(visualID);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.emf.ecore.ENamedElement getDefiningNamedElement(org.eclipse.core.runtime.IAdaptable elementTypeAdapter) {
			return concretemodel.diagram.providers.ConcretemodelElementTypes.getElement(elementTypeAdapter);
		}
	}; 

	}
